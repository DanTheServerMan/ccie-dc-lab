annotations: []
nodes: 
 configuration: |-
  hostname spine-1
  # workaround for booting to loader> prompt
  echo 'from cli import cli' > set_boot.py
  echo 'import json' >> set_boot.py
  echo 'import os' >> set_boot.py
  echo 'import time' >> set_boot.py
  echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
  echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
  echo 'i = 0' >> set_boot.py
  echo 'while i < 10:' >> set_boot.py
  echo ' try:' >> set_boot.py
  echo '     save_config = cli("copy running-config startup-config")' >> set_boot.py
  echo '     break' >> set_boot.py
  echo ' except Exception:' >> set_boot.py
  echo '     i += 1' >> set_boot.py
  echo '     time.sleep(1)' >> set_boot.py
  echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
  event manager applet BOOTCONFIG
  event syslog pattern "Configured from vty"
  action 1.0 cli python bootflash:set_boot.py
  # minimum needed config to login
  no password strength-check
  username admin role network-admin
  username admin password cisco role network-admin
  username cisco role network-admin
  username cisco password cisco role network-admin
  vlan 100
  name "Server VLAN"
  interface ethernet1/1
  no shut
  description "Connection to leaf3"
  switchport mode trunk
  switchport trunk allowed vlan 100
  interface ethernet1/2
  no shut
  description "Connection to leaf2"
  switchport mode trunk
  switchport trunk allowed vlan 100
  interface ethernet1/3
  no shut
  description "Connection to leaf3"
  switchport mode trunk
  switchport trunk allowed vlan 100
 cpu_limit: null
 cpus: null
 data_volume: null
 hide_links: false
 id: n0
 image_definition: null
 label: spine-1
 node_definition: nxosv9000
 ram: null
 tags: []
 x: -320
 y: 400
 interfaces:
   - id: i0
     label: Loopback0
     type: loopback
   - id: i1
     label: mgmt0
     slot: 0
     type: physical
   - id: i2
     label: Ethernet1/1
     slot: 1
     type: physical
   - id: i3
     label: Ethernet1/2
     slot: 2
     type: physical
   - id: i4
     label: Ethernet1/3
     slot: 3
     type: physical
   - id: i5
     label: Ethernet1/4
     slot: 4
     type: physical
   - id: i6
     label: Ethernet1/5
     slot: 5
     type: physical
   - id: i7
     label: Ethernet1/6
     slot: 6
     type: physical
   - id: i8
     label: Ethernet1/7
     slot: 7
     type: physical
   - id: i9
     label: Ethernet1/8
     slot: 8
     type: physical
   - id: i10
     label: Ethernet1/9
     slot: 9
     type: physical
   - id: i11
     label: Ethernet1/10
     slot: 10
     type: physical
   - id: i12
     label: Ethernet1/11
     slot: 11
     type: physical
   - id: i13
     label: Ethernet1/12
     slot: 12
     type: physical
   - id: i14
     label: Ethernet1/13
     slot: 13
     type: physical
  - boot_disk_size: null
 configuration: |-
   hostname spine-2
   # workaround for booting to loader> prompt
   echo 'from cli import cli' > set_boot.py
   echo 'import json' >> set_boot.py
   echo 'import os' >> set_boot.py
   echo 'import time' >> set_boot.py
   echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
   echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
   echo 'i = 0' >> set_boot.py
   echo 'while i < 10:' >> set_boot.py
   echo ' try:' >> set_boot.py
   echo '     save_config = cli("copy running-config startup-config")' >> set_boot.py
   echo '     break' >> set_boot.py
   echo ' except Exception:' >> set_boot.py
   echo '     i += 1' >> set_boot.py
   echo '     time.sleep(1)' >> set_boot.py
   echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
   event manager applet BOOTCONFIG
    event syslog pattern "Configured from vty"
    action 1.0 cli python bootflash:set_boot.py
   # minimum needed config to login
   no password strength-check
   username admin role network-admin
   username admin password cisco role network-admin
   username cisco role network-admin
   username cisco password cisco role network-admin
   vlan 100
    name "Server VLAN"
   interface ethernet1/1
    no shut
    description "Connection to leaf3"
    switchport mode trunk
    switchport trunk allowed vlan 100
   interface ethernet1/2
    no shut
    description "Connection to leaf2"
    switchport mode trunk
    switchport trunk allowed vlan 100
   interface ethernet1/3
    no shut
    description "Connection to leaf3"
    switchport mode trunk
    switchport trunk allowed vlan 100
 cpu_limit: null
 cpus: null
 data_volume: null
 hide_links: false
 id: n1
 image_definition: null
 label: spine-2
 node_definition: nxosv9000
 ram: null
 tags: []
 x: 40
 y: 400
 interfaces:
   - id: i0
     label: Loopback0
     type: loopback
   - id: i1
     label: mgmt0
     slot: 0
     type: physical
   - id: i2
     label: Ethernet1/1
     slot: 1
     type: physical
   - id: i3
     label: Ethernet1/2
     slot: 2
     type: physical
   - id: i4
     label: Ethernet1/3
     slot: 3
     type: physical
   - id: i5
     label: Ethernet1/4
     slot: 4
     type: physical
   - id: i6
     label: Ethernet1/5
     slot: 5
     type: physical
   - id: i7
     label: Ethernet1/6
     slot: 6
     type: physical
   - id: i8
     label: Ethernet1/7
     slot: 7
     type: physical
   - id: i9
     label: Ethernet1/8
     slot: 8
     type: physical
   - id: i10
     label: Ethernet1/9
     slot: 9
     type: physical
   - id: i11
     label: Ethernet1/10
     slot: 10
     type: physical
   - id: i12
     label: Ethernet1/11
     slot: 11
     type: physical
   - id: i13
     label: Ethernet1/12
     slot: 12
     type: physical
   - id: i14
     label: Ethernet1/13
     slot: 13
     type: physical
  - boot_disk_size: null
 configuration: |
   hostname leaf-1
   # workaround for booting to loader> prompt
   echo 'from cli import cli' > set_boot.py
   echo 'import json' >> set_boot.py
   echo 'import os' >> set_boot.py
   echo 'import time' >> set_boot.py
   echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
   echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
   echo 'i = 0' >> set_boot.py
   echo 'while i < 10:' >> set_boot.py
   echo ' try:' >> set_boot.py
   echo '     save_config = cli("copy running-config startup-config")' >> set_boot.py
   echo '     break' >> set_boot.py
   echo ' except Exception:' >> set_boot.py
   echo '     i += 1' >> set_boot.py
   echo '     time.sleep(1)' >> set_boot.py
   echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
   event manager applet BOOTCONFIG
    event syslog pattern "Configured from vty"
    action 1.0 cli python bootflash:set_boot.py
   # minimum needed config to login
   no password strength-check
   username admin role network-admin
   username admin password cisco role network-admin
   username cisco role network-admin
   username cisco password cisco role network-admin
   vlan 100
    name "Server VLAN"
   interface ethernet1/1
    no shut
    description "Connection to Spine1"
    switchport mode trunk
    switchport trunk allowed vlan 100
   interface ethernet1/2
    no shut
    description "Connection to Spine2"
    switchport mode trunk
    switchport trunk allowed vlan 100
   interface ethernet1/3
    no shut
    description "Connection to ucs-ubuntu"
    switchport mode access
    switchport access vlan 100
    spanning-tree port type edge
   interface ethernet1/4
    no shut
    description "Connection to leaf2"
   interface ethernet1/5
    no shut
    description "Connection to leaf2"
 cpu_limit: null
 cpus: null
 data_volume: null
 hide_links: false
 id: n2
 image_definition: null
 label: leaf-1
 node_definition: nxosv9000
 ram: null
 tags: []
 x: -480
 y: 600
 interfaces:
   - id: i0
     label: Loopback0
     type: loopback
   - id: i1
     label: mgmt0
     slot: 0
     type: physical
   - id: i2
     label: Ethernet1/1
     slot: 1
     type: physical
   - id: i3
     label: Ethernet1/2
     slot: 2
     type: physical
   - id: i4
     label: Ethernet1/3
     slot: 3
     type: physical
   - id: i5
     label: Ethernet1/4
     slot: 4
     type: physical
   - id: i6
     label: Ethernet1/5
     slot: 5
     type: physical
   - id: i7
     label: Ethernet1/6
     slot: 6
     type: physical
   - id: i8
     label: Ethernet1/7
     slot: 7
     type: physical
   - id: i9
     label: Ethernet1/8
     slot: 8
     type: physical
   - id: i10
     label: Ethernet1/9
     slot: 9
     type: physical
   - id: i11
     label: Ethernet1/10
     slot: 10
     type: physical
   - id: i12
     label: Ethernet1/11
     slot: 11
     type: physical
   - id: i13
     label: Ethernet1/12
     slot: 12
     type: physical
   - id: i14
     label: Ethernet1/13
     slot: 13
     type: physical
  - boot_disk_size: null
 configuration: |-
   hostname leaf-2
   # workaround for booting to loader> prompt
   echo 'from cli import cli' > set_boot.py
   echo 'import json' >> set_boot.py
   echo 'import os' >> set_boot.py
   echo 'import time' >> set_boot.py
   echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
   echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
   echo 'i = 0' >> set_boot.py
   echo 'while i < 10:' >> set_boot.py
   echo ' try:' >> set_boot.py
   echo '     save_config = cli("copy running-config startup-config")' >> set_boot.py
   echo '     break' >> set_boot.py
   echo ' except Exception:' >> set_boot.py
   echo '     i += 1' >> set_boot.py
   echo '     time.sleep(1)' >> set_boot.py
   echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
   event manager applet BOOTCONFIG
    event syslog pattern "Configured from vty"
    action 1.0 cli python bootflash:set_boot.py
   # minimum needed config to login
   no password strength-check
   username admin role network-admin
   username admin password cisco role network-admin
   username cisco role network-admin
   username cisco password cisco role network-admin
   vlan 100
    name "Server VLAN"
   interface ethernet1/1
    no shut
    description "Connection to Spine1"
    switchport mode trunk
    switchport trunk allowed vlan 100
   interface ethernet1/2
    no shut
    description "Connection to Spine2"
    switchport mode trunk
    switchport trunk allowed vlan 100
   interface ethernet1/3
    no shut
    description "Connection to ucs-ubuntu"
    switchport mode access
    switchport access vlan 100
    spanning-tree port type edge
   interface ethernet1/4
    no shut
    description "Connection to leaf1"
   interface ethernet1/5
    no shut
    description "Connection to leaf1"
 cpu_limit: null
 cpus: null
 data_volume: null
 hide_links: false
 id: n3
 image_definition: null
 label: leaf-2
 node_definition: nxosv9000
 ram: null
 tags: []
 x: -160
 y: 600
 interfaces:
   - id: i0
     label: Loopback0
     type: loopback
   - id: i1
     label: mgmt0
     slot: 0
     type: physical
   - id: i2
     label: Ethernet1/1
     slot: 1
     type: physical
   - id: i3
     label: Ethernet1/2
     slot: 2
     type: physical
   - id: i4
     label: Ethernet1/3
     slot: 3
     type: physical
   - id: i5
     label: Ethernet1/4
     slot: 4
     type: physical
   - id: i6
     label: Ethernet1/5
     slot: 5
     type: physical
   - id: i7
     label: Ethernet1/6
     slot: 6
     type: physical
   - id: i8
     label: Ethernet1/7
     slot: 7
     type: physical
   - id: i9
     label: Ethernet1/8
     slot: 8
     type: physical
   - id: i10
     label: Ethernet1/9
     slot: 9
     type: physical
   - id: i11
     label: Ethernet1/10
     slot: 10
     type: physical
   - id: i12
     label: Ethernet1/11
     slot: 11
     type: physical
   - id: i13
     label: Ethernet1/12
     slot: 12
     type: physical
   - id: i14
     label: Ethernet1/13
     slot: 13
     type: physical
  - boot_disk_size: null
 configuration: |
   hostname leaf-3
   # workaround for booting to loader> prompt
   echo 'from cli import cli' > set_boot.py
   echo 'import json' >> set_boot.py
   echo 'import os' >> set_boot.py
   echo 'import time' >> set_boot.py
   echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
   echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
   echo 'i = 0' >> set_boot.py
   echo 'while i < 10:' >> set_boot.py
   echo ' try:' >> set_boot.py
   echo '     save_config = cli("copy running-config startup-config")' >> set_boot.py
   echo '     break' >> set_boot.py
   echo ' except Exception:' >> set_boot.py
   echo '     i += 1' >> set_boot.py
   echo '     time.sleep(1)' >> set_boot.py
   echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
   event manager applet BOOTCONFIG
    event syslog pattern "Configured from vty"
    action 1.0 cli python bootflash:set_boot.py
   # minimum needed config to login
   no password strength-check
   username admin role network-admin
   username admin password cisco role network-admin
   username cisco role network-admin
   username cisco password cisco role network-admin
   vlan 100
    name "Server VLAN"
   interface ethernet1/1
    no shut
    description "Connection to Spine1"
    switchport mode trunk
    switchport trunk allowed vlan 100
   interface ethernet1/2
    no shut
    description "Connection to Spine2"
    switchport mode trunk
    switchport trunk allowed vlan 100
 cpu_limit: null
 cpus: null
 data_volume: null
 hide_links: false
 id: n4
 image_definition: null
 label: leaf-3
 node_definition: nxosv9000
 ram: null
 tags: []
 x: 160
 y: 600
 interfaces:
   - id: i0
     label: Loopback0
     type: loopback
   - id: i1
     label: mgmt0
     slot: 0
     type: physical
   - id: i2
     label: Ethernet1/1
     slot: 1
     type: physical
   - id: i3
     label: Ethernet1/2
     slot: 2
     type: physical
   - id: i4
     label: Ethernet1/3
     slot: 3
     type: physical
   - id: i5
     label: Ethernet1/4
     slot: 4
     type: physical
   - id: i6
     label: Ethernet1/5
     slot: 5
     type: physical
   - id: i7
     label: Ethernet1/6
     slot: 6
     type: physical
   - id: i8
     label: Ethernet1/7
     slot: 7
     type: physical
   - id: i9
     label: Ethernet1/8
     slot: 8
     type: physical
   - id: i10
     label: Ethernet1/9
     slot: 9
     type: physical
   - id: i11
     label: Ethernet1/10
     slot: 10
     type: physical
   - id: i12
     label: Ethernet1/11
     slot: 11
     type: physical
   - id: i13
     label: Ethernet1/12
     slot: 12
     type: physical
   - id: i14
     label: Ethernet1/13
     slot: 13
     type: physical
  - boot_disk_size: null
 configuration: |-
   #cloud-config
   hostname: inserthostname-here
   manage_etc_hosts: True
   system_info:
     default_user:
       name: cisco
   password: cisco
   chpasswd: { expire: False }
   ssh_pwauth: True
   ssh_authorized_keys:
      - your-ssh-pubkey-line-goes-here
 cpu_limit: null
 cpus: null
 data_volume: null
 hide_links: false
 id: n5
 image_definition: null
 label: ucs-ubuntu
 node_definition: ubuntu
 ram: null
 tags: []
 x: -320
 y: 800
 interfaces:
   - id: i0
     label: ens2
     slot: 0
     type: physical
   - id: i1
     label: ens3
     slot: 1
     type: physical
links:
  - id: l0
 n1: n2
 n2: n0
 i1: i2
 i2: i2
 conditioning: {}
 label: leaf-1-Ethernet1/1<->spine-1-Ethernet1/1
  - id: l1
 n1: n2
 n2: n1
 i1: i3
 i2: i2
 conditioning: {}
 label: leaf-1-Ethernet1/2<->spine-2-Ethernet1/1
  - id: l2
 n1: n1
 n2: n4
 i1: i4
 i2: i3
 conditioning: {}
 label: spine-2-Ethernet1/3<->leaf-3-Ethernet1/2
  - id: l3
 n1: n0
 n2: n3
 i1: i3
 i2: i2
 conditioning: {}
 label: spine-1-Ethernet1/2<->leaf-2-Ethernet1/1
  - id: l4
 n1: n3
 n2: n1
 i1: i3
 i2: i3
 conditioning: {}
 label: leaf-2-Ethernet1/2<->spine-2-Ethernet1/2
  - id: l5
 n1: n0
 n2: n4
 i1: i4
 i2: i2
 conditioning: {}
 label: spine-1-Ethernet1/3<->leaf-3-Ethernet1/1
  - id: l6
 n1: n5
 n2: n2
 i1: i0
 i2: i4
 conditioning: {}
 label: ubuntu-0-ens2<->leaf-1-Ethernet1/3
  - id: l7
 n1: n5
 n2: n3
 i1: i1
 i2: i4
 conditioning: {}
 label: ubuntu-0-ens3<->leaf-2-Ethernet1/3
  - id: l8
 n1: n2
 n2: n3
 i1: i5
 i2: i5
 conditioning: {}
 label: leaf-1-Ethernet1/4<->leaf-2-Ethernet1/4
  - id: l9
 n1: n2
 n2: n3
 i1: i6
 i2: i6
 conditioning: {}
 label: leaf-1-Ethernet1/5<->leaf-2-Ethernet1/5
lab:
  description: ''
  notes: ''
  title: Lab at Sat 02:37 AM
  version: 0.2.1