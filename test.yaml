annotations:
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      Underlay Network:
      172.16.0.0/8
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: 40.0
    y1: -200.0
    z_index: 0
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: true
    text_content: 10.0.10.2/24
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -160.0
    y1: 520.0
    z_index: 1
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: 10.0.10.1/24
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -400.0
    y1: 520.0
    z_index: 2
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: ''
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -520.0
    y1: 240.0
    z_index: 3
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      Server VLAN: 100
      Server Network: 10.0.10.0/24
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -640.0
    y1: 360.0
    z_index: 4
  - border_color: '#808080FF'
    border_style: ''
    color: '#F59C9CFF'
    thickness: 1
    type: ellipse
    x1: -140.0
    y1: 420.0
    x2: 60.0
    y2: 20.0
    z_index: 5
  - border_color: '#808080FF'
    border_style: ''
    color: '#8FBDFFFF'
    thickness: 1
    type: ellipse
    x1: -340.0
    y1: 420.0
    x2: 60.0
    y2: 20.0
    z_index: 6
nodes:
  - boot_disk_size: null
    configuration: |-
      hostname spine-1
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      interface ethernet1/1
        no shut
        description "Connection to Leaf1"
        no switchport 
        ip address 172.16.5.1
      interface ethernet1/2
        no shut
        description "Connection to Leaf2"
        no switchport 
        ip address 172.16.5.2
      interface ethernet1/3
        no shut
        description "Connection to Leaf3"
        no switchport 
        ip address 172.16.5.3
      interface ethernet1/4
        no shut
        description "Connection to Leaf4"
        no switchport 
        ip address 172.16.5.4
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n0
    image_definition: null
    label: spine-1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -240
    y: -200
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname spine-2
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      interface ethernet1/1
        no shut
        description "Connection to Leaf1"
        no switchport 
        ip address 172.16.6.1/8
      interface ethernet1/2
        no shut
        description "Connection to Leaf2"
        no switchport 
        ip address 172.16.6.2/8
      interface ethernet1/3
        no shut
        description "Connection to Leaf3"
        no switchport 
        ip address 172.16.6.3/8
      interface ethernet1/4
        no shut
        description "Connection to Leaf4"
        no switchport 
        ip address 172.16.6.4/8
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n1
    image_definition: null
    label: spine-2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 480
    y: -200
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname leaf-3
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      vlan 100
        name "Server VLAN"
      interface ethernet1/1
        no shut
        description "Connection to Spine1"
        no switchport 
        ip address 172.16.2.1/8
      interface ethernet1/2
        no shut
        description "Connection to Spine2"
        no switchport 
        ip address 172.16.2.2/8
      interface ethernet1/3
        no shut
        description "Connection to external-router"
      interface ethernet1/4
        no shut
        description "Connection to leaf-2, keep-alive link"
      interface ethernet1/5
        no shut
        description "Connection to leaf-2, peerlink"
      interface ethernet1/6
        no shut
        description "Connection to leaf-2, peerlink"
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n2
    image_definition: null
    label: leaf-3 (border)
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 280
    y: 240
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        slot: 6
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname leaf-2
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      vlan 100
        name "Server VLAN"
      interface ethernet1/1
        no shut
        description "Connection to Spine1"
        no switchport 
        ip address 172.16.2.1/8
      interface ethernet1/2
        no shut
        description "Connection to Spine2"
        no switchport 
        ip address 172.16.2.2/8
      interface ethernet1/3
        no shut
        description "Connection to leaf-1, keep-alive link"
      interface ethernet1/4
        no shut
        description "Connection to leaf-1, peerlink"
      interface ethernet1/5
        no shut
        description "Connection to leaf-1, peerlink"
      interface ethernet1/6
        no shut
        description "Connection to ucs-server-1"
        spanning-tree port type edge
      interface ethernet1/7
        no shut
        description "Connection to ucs-server-2"
        spanning-tree port type edge
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n3
    image_definition: null
    label: leaf-2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -40
    y: 240
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        slot: 6
        type: physical
      - id: i8
        label: Ethernet1/7
        slot: 7
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname leaf-1
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      vlan 100
        name "Server VLAN"
      interface ethernet1/1
        no shut
        description "Connection to Spine1"
        no switchport 
        ip address 172.16.2.1/8
      interface ethernet1/2
        no shut
        description "Connection to Spine2"
        no switchport 
        ip address 172.16.2.2/8
      interface ethernet1/3
        no shut
        description "Connection to leaf-2, keep-alive link"
      interface ethernet1/4
        no shut
        description "Connection to leaf-2, peerlink"
      interface ethernet1/5
        no shut
        description "Connection to leaf-2, peerlink"
      interface ethernet1/6
        no shut
        description "Connection to ucs-server-1"
        spanning-tree port type edge
      interface ethernet1/7
        no shut
        description "Connection to ucs-server-2"
        spanning-tree port type edge
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n4
    image_definition: null
    label: leaf-1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -400
    y: 240
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        slot: 6
        type: physical
      - id: i8
        label: Ethernet1/7
        slot: 7
        type: physical
  - boot_disk_size: null
    configuration: |-
      # this is a shell script which will be sourced at boot
      hostname ucs-server-2
      # configurable user account
      USERNAME=admin
      PASSWORD=cisco
      # no password for tc user by default
      TC_PASSWORD=
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n5
    image_definition: null
    label: ucs-server-2
    node_definition: server
    ram: null
    tags: []
    x: -120
    y: 480
    interfaces:
      - id: i0
        label: eth0
        slot: 0
        type: physical
      - id: i1
        label: eth1
        slot: 1
        type: physical
  - boot_disk_size: null
    configuration: |-
      # this is a shell script which will be sourced at boot
      hostname ucs-server-1
      # configurable user account
      USERNAME=admin
      PASSWORD=cisco
      # no password for tc user by default
      TC_PASSWORD=
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n6
    image_definition: null
    label: ucs-server-1
    node_definition: server
    ram: null
    tags: []
    x: -360
    y: 480
    interfaces:
      - id: i0
        label: eth0
        slot: 0
        type: physical
      - id: i1
        label: eth1
        slot: 1
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname external-router
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n7
    image_definition: null
    label: external-router
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 480
    y: 480
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname external-router
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      vlan 100
        name "Server VLAN"
      interface ethernet1/3
        no shut
        description "Connection to leaf-3"
      interface ethernet1/2
        no shut
        description "Connection to leaf-4"
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n8
    image_definition: null
    label: leaf-4 (border)
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 640
    y: 240
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        slot: 6
        type: physical
links:
  - id: l0
    n1: n4
    n2: n0
    i1: i2
    i2: i2
    conditioning: {}
    label: leaf-1-Ethernet1/1<->spine-1-Ethernet1/1
  - id: l1
    n1: n3
    n2: n0
    i1: i2
    i2: i3
    conditioning: {}
    label: leaf-2-Ethernet1/1<->spine-1-Ethernet1/2
  - id: l2
    n1: n4
    n2: n1
    i1: i3
    i2: i2
    conditioning: {}
    label: leaf-1-Ethernet1/2<->spine-2-Ethernet1/1
  - id: l3
    n1: n3
    n2: n1
    i1: i3
    i2: i3
    conditioning: {}
    label: leaf-2-Ethernet1/2<->spine-2-Ethernet1/2
  - id: l4
    n1: n2
    n2: n0
    i1: i2
    i2: i4
    conditioning: {}
    label: leaf-3-Ethernet1/1<->spine-1-Ethernet1/3
  - id: l5
    n1: n2
    n2: n1
    i1: i3
    i2: i4
    conditioning: {}
    label: leaf-3-Ethernet1/2<->spine-2-Ethernet1/3
  - id: l6
    n1: n4
    n2: n3
    i1: i4
    i2: i4
    conditioning: {}
    label: leaf-1-Ethernet1/3<->leaf-2-Ethernet1/3
  - id: l7
    n1: n4
    n2: n3
    i1: i5
    i2: i5
    conditioning: {}
    label: leaf-1-Ethernet1/4<->leaf-2-Ethernet1/4
  - id: l8
    n1: n4
    n2: n3
    i1: i6
    i2: i6
    conditioning: {}
    label: leaf-1-Ethernet1/5<->leaf-2-Ethernet1/5
  - id: l9
    n1: n6
    n2: n4
    i1: i0
    i2: i7
    conditioning: {}
    label: ucs-server-1-eth0<->leaf-1-Ethernet1/6
  - id: l10
    n1: n5
    n2: n4
    i1: i0
    i2: i8
    conditioning: {}
    label: ucs-server-2-eth0<->leaf-1-Ethernet1/7
  - id: l11
    n1: n0
    n2: n8
    i1: i5
    i2: i2
    conditioning: {}
    label: spine-1-Ethernet1/4<->nxos9000-0-Ethernet1/1
  - id: l12
    n1: n1
    n2: n8
    i1: i5
    i2: i3
    conditioning: {}
    label: spine-2-Ethernet1/4<->nxos9000-0-Ethernet1/2
  - id: l13
    n1: n2
    n2: n7
    i1: i4
    i2: i4
    conditioning: {}
    label: leaf-3 (border)-Ethernet1/3<->external-router-Ethernet1/3
  - id: l14
    n1: n8
    n2: n7
    i1: i4
    i2: i5
    conditioning: {}
    label: leaf-4 (border)-Ethernet1/3<->external-router-Ethernet1/4
  - id: l15
    n1: n2
    n2: n8
    i1: i5
    i2: i5
    conditioning: {}
    label: leaf-3 (border)-Ethernet1/4<->leaf-4 (border)-Ethernet1/4
  - id: l16
    n1: n2
    n2: n8
    i1: i6
    i2: i6
    conditioning: {}
    label: leaf-3 (border)-Ethernet1/5<->leaf-4 (border)-Ethernet1/5
  - id: l17
    n1: n2
    n2: n8
    i1: i7
    i2: i7
    conditioning: {}
    label: leaf-3 (border)-Ethernet1/6<->leaf-4 (border)-Ethernet1/6
  - id: l18
    n1: n3
    n2: n6
    i1: i7
    i2: i1
    conditioning: {}
    label: leaf-2-Ethernet1/6<->ucs-server-1-eth1
  - id: l19
    n1: n3
    n2: n5
    i1: i8
    i2: i1
    conditioning: {}
    label: leaf-2-Ethernet1/7<->ucs-server-2-eth1
lab:
  description: ''
  notes: ''
  title: Lab at Sat 14:13 PM
  version: 0.2.1